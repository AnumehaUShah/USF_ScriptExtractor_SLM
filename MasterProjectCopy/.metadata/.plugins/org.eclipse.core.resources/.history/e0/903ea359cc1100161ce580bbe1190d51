package edu.ca.usf.scriptextractor.tests;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Properties;

import org.json.JSONException;
import org.json.JSONObject;

import com.google.gson.Gson;

import edu.ca.usf.scriptextractor.AlphanumericUniformProbabilityStrategy;
import edu.ca.usf.scriptextractor.CharacterKeywordTransform;
import edu.ca.usf.scriptextractor.CharacterTransform;
import edu.ca.usf.scriptextractor.CompositeWordTransform;
import edu.ca.usf.scriptextractor.InputTransform;
import edu.ca.usf.scriptextractor.SLM;
import edu.ca.usf.scriptextractor.TermSequence;
import org.apache.commons.*;
import org.apache.commons.lang3.*;
public class TestBenignInput_100 implements Runnable {
	Thread t;
	String dir;
	String thread_name;
	int file_limit;
	float trainPercent;
	int benignNGram;
	InputTransform benignTransform;
	SLM benignModel;
	
	
	TestBenignInput_100(String dir, String thread_name, int file_limit,int benignNGram,float trainPercent, InputTransform benignTransform, 
			SLM benignModel){
		
		t = new Thread(this, thread_name);
		this.dir = dir;
		this.file_limit = file_limit;
		this.trainPercent = trainPercent;
		this.benignNGram = benignNGram;
		this.benignTransform = benignTransform;
		this.benignModel = benignModel;
		
		t.start();
		
	}
	
	public void run(int benignNGram, float trainPercent, int fileLimit, InputTransform benignTransform, String dir) throws IOException {
		
		//File benignDir = new File("/home2/ashah/benign_dir/"+ dir);
		File benignDir = new File("/home2/ashah/benign_50/"+ dir);
		
		File[] benignFiles = benignDir.listFiles();

		List<File> benignTestScripts = new ArrayList<File>();

		
		int benignTrainCounter = 0;
		for (int i = 2; i < benignFiles.length && (i < fileLimit); i++) {
			System.out.println(i);
			train(benignModel, benignFiles[i], benignTransform);
		}

		System.out.println("benignTrainCounter , benignTestScript size = " +benignTrainCounter + ","
				+ benignTestScripts.size() + ",");
			
		
	}

	public static String fileToString(File file) throws IOException {
		FileInputStream fis = new FileInputStream(file);
		StringBuffer script = new StringBuffer();
		int curChar;
		while ((curChar = fis.read()) != -1) {
			script.append((char) curChar);
		}
		String scriptString = script.toString().replaceAll(
				"<\\/?(script|SCRIPT)[^>]*?>", "");
		
		return scriptString;
	}

	public static void train(SLM model, File inFile,
			InputTransform inputTransform) throws IOException {
		
		try {
			model.add(inputTransform.transform(fileToString(inFile)));
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	
	@Override
	public void run() {
		try {
			run(benignNGram, trainPercent,file_limit, benignTransform, dir);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		// TODO Auto-generated method stub
		
	}
	
	public static void main(String[] args) throws IOException {

		int benignNGram = 4;
		InputTransform benignTransform = new CharacterTransform();
		//CompositeWordTransform benignTransform = new CompositeWordTransform();
		//InputTransform benignTransform = new CharacterKeywordTransform();
		SLM benignModel = new SLM(benignNGram);
		benignModel
				.setQueryStrategry(new AlphanumericUniformProbabilityStrategy());
		
	
		TestBenignInput_100 thread1 = new TestBenignInput_100("dir1", "1", 7910, 4, 0.08f, benignTransform, benignModel);
		TestBenignInput_100 thread2 = new TestBenignInput_100("dir2", "2", 5900, 4, 0.08f, benignTransform, benignModel);
		TestBenignInput_100 thread3 = new TestBenignInput_100("dir3", "3", 6530, 4, 0.08f, benignTransform, benignModel);
		TestBenignInput_100 thread4 = new TestBenignInput_100("dir4", "4", 4200, 4, 0.08f, benignTransform, benignModel);
		//TestBenign thread5 = new TestBenign("dir5", "5", 100, 4, 0.08f, benignTransform, benignModel);
		
		try {
			thread1.t.join();
			thread2.t.join();
			thread3.t.join();
			thread4.t.join();
			//thread5.t.join();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		/******* The code is added by anumeha shah for converting slm model to json****/
		JSONObject obj_benignCountsAB = new JSONObject();
		for(Map.Entry<TermSequence, Integer> entry : benignModel.countsAB.entrySet()){
			String key = entry.getKey().toString();
			key = key.substring(1, key.length()-1).replace(", ", "");
			
		
			int value = entry.getValue();
			
			if(value > 10000){
				
				
				System.out.printf("Key : %s and Value: %s %n", key, entry.getValue());
			}
		    try {
		    	if(value > 10)
		    		obj_benignCountsAB.put(key, value);
			} catch (JSONException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		
		FileWriter file_benignCountsAB;
		try {
			file_benignCountsAB = new FileWriter("InputBenignCountsAB.json");
			file_benignCountsAB.write(obj_benignCountsAB.toString());
			file_benignCountsAB.flush();
			file_benignCountsAB.close(); 
		} catch (IOException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		}                
		
		
	
		JSONObject obj_benignCountsA = new JSONObject();
		for(Map.Entry<TermSequence, Integer> entry : benignModel.countsA.entrySet()){
			String key = entry.getKey().toString();
			
			key = key.substring(1, key.length()-1).replace(", ", "");
			
			//System.out.println("key is" + key);
			try{
				key = StringEscapeUtils.unescapeJava(key);
			}
			catch(IllegalArgumentException ex){
				continue;
			}
			int value = entry.getValue();
		    //System.out.printf("Key : %s and Value: %s %n", entry.getKey().toString(), entry.getValue());
		    try {
		    	if(value > 10)
		    		obj_benignCountsA.put(key, value);
			} catch (JSONException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		
		FileWriter file_benignCountsA;
		try {
			file_benignCountsA = new FileWriter("InputBenignCountsA.json");
			file_benignCountsA.write(obj_benignCountsA.toString());
			file_benignCountsA.flush();
			file_benignCountsA.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}                
		
		
		JSONObject obj_total_benign = new JSONObject();
		try {
			obj_total_benign.put("totalWordsA", benignModel.totalWordsA);
			obj_total_benign.put("totalWordsAB", benignModel.totalWordsAB);
		} catch (JSONException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		
		FileWriter file_totalbenign;
		try {
			file_totalbenign = new FileWriter("InputBenignTotal.json");
			file_totalbenign.write(obj_total_benign.toString());
			file_totalbenign.flush();
			file_totalbenign.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}                
		
		

		/******* The above code is added by anumeha shah for converting slm model to json****/
		
		
		
	}
}
